---
title: "Joining Assignment"
author: "Riya Sharma"
date: "`r format(Sys.time(), '%B %d, %Y')`"
format:
  html:
    self-contained: true
    toc: true
    toc-location: left
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)

library(tidyverse)
library(here)

```

# Load the datasets

```{r}

counties_demographics <- readRDS(here("data", "counties_demographics.rds"))
counties_elexresults <- readRDS(here("data", "counties_elexresults.rds"))
counties_rural_urban_suburban <- readRDS(here("data", "counties_rural_urban_suburban.rds"))



```

# Exercises

1)  

Join together the election results and urban/suburban/rural tables above, and then use the merged table to:

-   filter for just Virginia

-   group_by and summarize to calculate the mean pct of Trump 2020 vote (`pct_r_2020`) by urban/rural categories (`rural_urban`)

```{r}

results_counties = inner_join(counties_rural_urban_suburban, counties_elexresults) # I inner joined the tables (joined by matching values in both tables) with the inner_join() function and assigned them to a variable called results_counties

results_counties %>%  
  filter(state_code == "VA") %>%
  group_by(rural_urban) %>%
  summarize(mean_pct = (mean(pct_r_2020)))

# I used the pipe operator to indicate which table I'm pulling from, and I used the filter() function to get VA results only. Then, I used group_by() to group by the rural/urban categories and used summarize() to include information on the mean percent who voted for Trump in each area. The mean for each category was calculated by the mean() function and assigned to the mean_pct object. 

```

2)  

Using the joined election results / urban/suburban/rural table created above:

-   filter for just Virginia

-   count up how many counties were won by party in 2020 (`winner_2020`) by urban/rural categories

```{r}

results_counties %>%  
  filter(state_code == "VA") %>%
  group_by(rural_urban) %>%
  summarize(total_R = sum(winner_2020=="R"), total_D = sum(winner_2020=="D"))

# I used the pipe operator to indicate which table I'm pulling from, and I used the filter() function to get VA results only. Then, I used group_by() to group by the rural/urban categories and used summarize() to include totals on how many counties each party won. The total for each category and party was calculated by the sum() function and assigned to total_R for Republicans and total_D for Democrats. 

```

3)  

Join together the election results and demographics tables above, and then use the joined table to:

-   filter for just Florida

-   group/summarize to calculate the mean pct of Trump 2020 vote in the counties above or below national average for college graduates (`pct_ed_college_all_abovebelow_natl`)

```{r}

results_demog = inner_join(counties_demographics, counties_elexresults)

results_demog %>%  
  filter(state_code == "FL") %>%
  group_by(pct_ed_college_all_abovebelow_natl) %>%
  summarize(mean_pct = (mean(pct_r_2020)))

# I created a new table by inner joining the demographics and election results tables. Next, I used the pipe operator to indicate which table I'm pulling from, and I used the filter() function to get FL results only. Then, I used group_by() to group by the counties above and below the national average for college graduates and used summarize() to include information on the mean percent who voted for Trump in each area. The mean for each category was calculated by the mean() function and assigned to the mean_pct object. The results indicate that, on average, most people (66.7%) voting for Trump in FL were from counties below the national average for college graduates, while 48% were from those above the national average.

```

4)  

Using the joined table you made above:

-   group/summarize to calculate the mean pct of Trump 2020 vote by counties above or below the national average for college graduates (`pct_ed_college_all_abovebelow_natl`).

    Note we're looking for the entire country here.

```{r}

results_demog %>%
  group_by(pct_ed_college_all_abovebelow_natl) %>%
  summarize(mean_pct = (mean(pct_r_2020)))

# I used the pipe operator to indicate which table I'm pulling from. Then, I used group_by() to group by the counties above and below the national average for college graduates and used summarize() to include information on the mean percent who voted for Trump. The mean for each category was calculated by the mean() function and assigned to the mean_pct object. The results are similar to Florida, with, on average, a majority of people (68.2%) voting for Trump nationally were from counties below the national average for college graduates, while 45% were from those above the national average.


```

Now using the joined datasets above, come up with two groupings you find interesting or newsworthy in a particular state, and replicate the steps above them them instead.

5)  

```{r}

results_demog %>%
  filter(state_code == "PA") %>%
  group_by(pct_race_nonwhite_abovebelow_natl) %>%
  summarize(mean_pct_r = (mean(pct_r_2020)), mean_pct_d = mean(pct_d_2020))

# I used the pipe operator to indicate which table I'm pulling from (results_demog) and filtered by state for PA. Then, I used group_by() to group by the counties above and below the national average for nonwhite individuals and used summarize() to include information on the mean percent who voted for Trump and Biden in 2020. The mean for each category was calculated by the mean() function and assigned to the mean_pct_r object for Republicans and mean_pct_d object for Democrats. The results indicate that most nonwhite individuals above the national average (81.4%) voted for Biden, while most nonwhite individuals below the national average (64.3%) voted for Trump. 

```

6)  

```{r}

results_counties %>%
  filter(state_code == "PA") %>%
  group_by(county) %>%
  summarize(pct_r_2020, pct_d_2020) %>%
  arrange(desc(pct_d_2020))

# I used the pipe operator to indicate which table I'm pulling from (results_counties) and filtered by state for PA. Then, I used group_by() to group by county and used summarize() to include information on the mean percent who voted for Trump and Biden in 2020. The mean for each category was calculated by the mean() function and assigned to the mean_pct_r object for Republicans and mean_pct_d object for Democrats. Finally, I arranged by the percent who voted for Biden in descending order. The results indicate that, on average, Philadelphia County had the largest portion of votes (81.4%) for Biden, while, on average, Fulton County had the highest share of votes (85.5%) for Trump. 



```

7)  Extra credit

Up until now we've joined two tables together. But we actually have three tables in this project. How might we join all three together into a single table, so all the measures for each county are combined in one place? (Hint: you can do this is multiple steps, doesn't have to be one step only.)

```{r}

all_tables = inner_join(results_demog, results_counties)

all_tables

# I inner joined the results_demog table (join of counties_demographics and counties_elexresults) with the results_counties table (join of counties_rural_urban_suburban and counties_elexresults). Therefore, all three tables are joined by matching values from the counties_elexresults table, which is present in both results_demog and results_counties. 

```
